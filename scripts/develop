#!/bin/bash

cat <<EOF | kind create cluster --name polar --config=-
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
  extraPortMappings:
  - containerPort: 80
    hostPort: 80
    protocol: TCP
  - containerPort: 443
    hostPort: 443
    protocol: TCP
EOF

echo "Installing Gateway CRDs"

kubectl kustomize "github.com/kubernetes-sigs/gateway-api/config/crd?ref=0fbc16ba7999bfb379f3c4fdcef589d7dd333e18" | kubectl apply -f -

echo "Creating Polar Service Account"

kubectl create serviceaccount polar

cat <<EOF | kubectl apply -f -
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: polar-tokenreview-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: polar
    namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: default
  name: polar-auth
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: polar-auth-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: polar-auth
subjects:
  - kind: ServiceAccount
    name: polar
    namespace: default
EOF