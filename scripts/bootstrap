#!/bin/bash

echo "Importing Kubernetes Configuration"
export K8S_JWT=$(kubectl get secret $(kubectl get serviceaccounts polar -o json | jq '.secrets[0].name' -r) -o json | jq '.data.token' -r | base64 -d)
export K8S_HOST=$(kubectl config view -o jsonpath='{.clusters[].cluster.server}')
export K8S_CERT=$(kubectl config view -o jsonpath='{.clusters[].cluster.certificate-authority-data}' --raw | base64 -d)

echo "Bootstrapping ACLs"
export CONSUL_HTTP_TOKEN=$(consul acl bootstrap -format json | jq '.SecretID' -r)
export CONSUL_POLICY_ID=$(consul acl policy create -name policy -rules @testing/policy.hcl -format json | jq '.ID' -r)
consul acl role create -name "polar" -policy-id "${CONSUL_POLICY_ID}" > /dev/null

echo "Creating ACL Auth Rule Binding"
consul acl auth-method create -type "kubernetes" -name "polar" -kubernetes-host "$K8S_HOST" -kubernetes-ca-cert "$K8S_CERT" -kubernetes-service-account-jwt "$K8S_JWT" | grep ServiceAccountJWT | cut -d':' -f 2 | tr -s " " | jq -r > token
consul acl binding-rule create -method=polar -bind-type=role -bind-name='polar' -selector='serviceaccount.name=="polar"' > /dev/null