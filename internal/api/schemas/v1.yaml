openapi: 3.0.0
info:
  version: 1.0.0
  title: Consul API Gateway
  description: Consul API Gateway Management API
  contact:
    name: Consul API Gateway Team
    email: consul-api-gateway@hashicorp.com
    url: http://hashicorp.com
  license:
    name: Mozilla Public License 2.0
    url: https://www.mozilla.org/en-US/MPL/2.0/
paths:
  "/namespaces/{namespace}/gateways":
    get:
      description: 'Returns all configured gateways in the given namespace.'
      operationId: listGatewaysInNamespace
      parameters:
      - name: namespace
        in: path
        description: Namespace of gateways to fetch
        required: true
        schema:
          type: string
      responses:
        '200':
          description: gateway response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GatewayPage"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/gateways":
    get:
      description: 'Returns all configured gateways.'
      operationId: listGateways
      parameters:
      - name: namespaces
        in: query
        description: The namespaces of gateways to list
        schema:
          type: string
      responses:
        '200':
          description: gateway response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GatewayPage"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      description: 'Creates a new gateway.'
      operationId: createGateway
      requestBody:
        description: Gateway to create
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Gateway"
      responses:
        '201':
          description: gateway response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Gateway"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/namespaces/{namespace}/gateways/{name}":
    get:
      description: Returns the gateway based off of its unique name.
      operationId: getGatewayInNamespace
      parameters:
      - name: namespace
        in: path
        description: Namespace of gateway to fetch
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of gateway to fetch
        required: true
        schema:
          type: string
      responses:
        '200':
          description: gateway response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Gateway"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      description: deletes a single gateway based on the Name supplied
      operationId: deleteGatewayInNamespace
      parameters:
      - name: namespace
        in: path
        description: Namespace of gateway to fetch
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of gateway to delete
        required: true
        schema:
          type: string
      responses:
        '204':
          description: gateway deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/gateways/{name}":
    get:
      description: Returns a gateway in the `"default"` namespace based off of its unique name.
      operationId: getGateway
      parameters:
      - name: name
        in: path
        description: Name of gateway to fetch
        required: true
        schema:
          type: string
      responses:
        '200':
          description: gateway response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Gateway"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      description: deletes a single gateway in the `"default"` namespace based on the name supplied
      operationId: deleteGateway
      parameters:
      - name: name
        in: path
        description: Name of gateway to delete
        required: true
        schema:
          type: string
      responses:
        '204':
          description: gateway deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Consul-Token
  schemas:
    GatewayPage:
      type: object
      required:
      - gateways
      properties:
        gateways:
          type: array
          items:
            "$ref": "#/components/schemas/Gateway"
          minItems: 0
        meta:
          type: object
    Gateway:
      type: object
      required:
      - name
      - namespace
      - listeners
      properties:
        name:
          type: string
          minLength: 1
        namespace:
          type: string
          minLength: 1
        listeners:
          type: array
          items:
            "$ref": "#/components/schemas/Listener"
          minItems: 1
        meta:
          type: object
    Listener:
      type: object
      required:
      - hostname
      - port
      - protocol
      properties:
        name:
          type: string
        hostname:
          type: string
          default: "*"
        port:
          type: number
        protocol:
          type: string
          enum:
          - http
          - tcp
        tls:
          "$ref": "#/components/schemas/TLSConfiguration"
    TLSConfiguration:
      type: object
      properties:
        minVersion:
          type: string
        maxVersion:
          type: string
        cipherSuites:
          type: array
          items:
            type: string
        certificates:
          type: array
          items:
            "$ref": "#/components/schemas/Certificate"
    Certificate:
      type: object
      properties:
        vault:
          "$ref": "#/components/schemas/VaultCertificate"
    VaultCertificate:
      type: object
      properties:
        path:
          type: string
          minLength: 1
        chainField:
          type: string
          minLength: 1
        privateKeyField:
          type: string
          minLength: 1
    Error:
      type: object
      required:
      - message
      - code
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          minLength: 1