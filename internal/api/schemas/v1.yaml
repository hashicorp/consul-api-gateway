openapi: 3.0.0
info:
  version: 1.0.0
  title: Consul API Gateway
  description: Consul API Gateway Management API
  contact:
    name: Consul API Gateway Team
    email: consul-api-gateway@hashicorp.com
    url: http://hashicorp.com
  license:
    name: Mozilla Public License 2.0
    url: https://www.mozilla.org/en-US/MPL/2.0/
paths:
  "/gateways":
    get:
      description: 'Returns all configured gateways.'
      operationId: listGateways
      responses:
        '200':
          description: gateway response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GatewayPage"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      description: 'Creates a new gateway.'
      operationId: createGateway
      requestBody:
        description: Gateway to add
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Gateway"
      responses:
        '201':
          description: gateway response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Gateway"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/gateways/{namespace}/{name}":
    get:
      description: Returns the gateway based off of its unique name.
      operationId: getGateway
      parameters:
      - name: namespace
        in: path
        description: Namespace of gateway to fetch
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of gateway to fetch
        required: true
        schema:
          type: string
      responses:
        '200':
          description: gateway response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Gateway"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      description: deletes a single gateway based on the Name supplied
      operationId: deleteGateway
      parameters:
      - name: namespace
        in: path
        description: Namespace of gateway to fetch
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of gateway to delete
        required: true
        schema:
          type: string
      responses:
        '204':
          description: gateway deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/routes/http":
    get:
      description: 'Returns all http routes.'
      operationId: listHTTPRoutes
      responses:
        '200':
          description: gateway response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPRoutePage"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      description: 'Creates a new http route.'
      operationId: createHTTPRoute
      requestBody:
        description: HTTPRoute to add
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/HTTPRoute"
      responses:
        '201':
          description: gateway response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPRoute"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/routes/http/{namespace}/{name}":
    get:
      description: Returns the http route based off of its unique name.
      operationId: getHTTPRoute
      parameters:
      - name: namespace
        in: path
        description: Namespace of route to fetch
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of route to fetch
        required: true
        schema:
          type: string
      responses:
        '200':
          description: route response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPRoute"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      description: deletes a single http route based on the Name supplied
      operationId: deleteHTTPRoute
      parameters:
      - name: namespace
        in: path
        description: Namespace of http route to fetch
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of http route to delete
        required: true
        schema:
          type: string
      responses:
        '204':
          description: route deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/routes/tcp":
    get:
      description: 'Returns all tcp routes.'
      operationId: listTCPRoutes
      responses:
        '200':
          description: gateway response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TCPRoutePage"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      description: 'Creates a new tcp route.'
      operationId: createTCPRoute
      requestBody:
        description: TCPRoute to add
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TCPRoute"
      responses:
        '201':
          description: gateway response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TCPRoute"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/routes/tcp/{namespace}/{name}":
    get:
      description: Returns the tcp route based off of its unique name.
      operationId: getTCPRoute
      parameters:
      - name: namespace
        in: path
        description: Namespace of route to fetch
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of route to fetch
        required: true
        schema:
          type: string
      responses:
        '200':
          description: route response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TCPRoute"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    delete:
      description: deletes a single tcp route based on the Name supplied
      operationId: deleteTCPRoute
      parameters:
      - name: namespace
        in: path
        description: Namespace of tcp route to fetch
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: Name of tcp route to delete
        required: true
        schema:
          type: string
      responses:
        '204':
          description: route deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Consul-Token
  schemas:
    GatewayPage:
      type: object
      required:
      - gateways
      properties:
        gateways:
          type: array
          items:
            "$ref": "#/components/schemas/Gateway"
          minItems: 0
        meta:
          type: object
    Gateway:
      type: object
      required:
      - name
      - namespace
      - listeners
      properties:
        name:
          type: string
          minLength: 1
        namespace:
          type: string
          minLength: 1
        listeners:
          type: array
          items:
            "$ref": "#/components/schemas/Listener"
          minItems: 1
        meta:
          type: object
    Listener:
      type: object
      required:
      - hostname
      - port
      - protocol
      properties:
        name:
          type: string
        hostname:
          type: string
        port:
          type: number
        protocol:
          type: string
          enum:
          - http
          - tcp
        tls:
          "$ref": "#/components/schemas/TLSConfiguration"
    TLSConfiguration:
      type: object
      properties:
        minVersion:
          type: string
        maxVersion:
          type: string
        cipherSuites:
          type: array
          items:
            type: string
        certificates:
          type: array
          items:
            "$ref": "#/components/schemas/Certificate"
    Certificate:
      type: object
      properties:
        vault:
          "$ref": "#/components/schemas/VaultCertificate"
    VaultCertificate:
      type: object
      properties:
        path:
          type: string
          minLength: 1
        chainField:
          type: string
          minLength: 1
        privateKeyField:
          type: string
          minLength: 1
    HTTPRoutePage:
      type: object
      required:
      - routes
      properties:
        routes:
          type: array
          items:
            "$ref": "#/components/schemas/HTTPRoute"
        meta:
          type: object
    GatewayReference:
      type: object
      required:
      - name
      - namespace
      properties:
        name:
          type: string
          minLength: 1
        namespace:
          type: string
          minLength: 1
    HTTPRoute:
      type: object
      required:
      - name
      - namespace
      - gateways
      properties:
        name:
          type: string
          minLength: 1
        namespace:
          type: string
          minLength: 1
        gateways:
          type: array
          items:
            "$ref": "#/components/schemas/GatewayReference"
          minItems: 1
        hostnames:
          type: array
          items:
            type: string
        rules:
          type: array
          items:
            "$ref": "#/components/schemas/HTTPRouteRule"
    HTTPRouteRule:
      type: object
      properties:
        matches:
          type: array
          items:
            "$ref": "#/components/schemas/HTTPMatch"
        filters:
          "$ref": "#/components/schemas/HTTPFilters"
        services:
          type: array
          items:
            "$ref": "#/components/schemas/HTTPService"
    HTTPService:
      type: object
      required:
      - name
      properties:
        name:
          type: string
        namespace:
          type: string
        weight:
          type: number
        filters:
          "$ref": "#/components/schemas/HTTPFilters"
    HTTPFilters:
      type: object
      properties:
        headers:
          type: array
          items:
            "$ref": "#/components/schemas/HTTPHeaderFilter"
    HTTPHeaderFilter:
      type: object
      properties:
        set:
          type: object
          additionalProperties:
            type: string
        add:
          type: object
          additionalProperties:
            type: string
        remove:
          type: array
          items:
            type: string
    HTTPMatch:
      type: object
      properties:
        path:
          "$ref": "#/components/schemas/HTTPPathMatch"
        headers:
          type: array
          items:
            "$ref": "#/components/schemas/HTTPHeaderMatch"
        query:
          type: array
          items:
            "$ref": "#/components/schemas/HTTPQueryMatch"
        method:
          type: string
          enum:
          - CONNECT
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          - TRACE
    HTTPPathMatch:
      type: object
      required:
      - matchOn
      - value
      properties:
        matchOn:
          type: string
          enum:
          - exact
          - prefix
          - regularExpression
        value:
          type: string
    HTTPHeaderMatch:
      type: object
      required:
      - matchOn
      - name
      - value
      properties:
        matchOn:
          type: string
          enum:
          - exact
          - prefix
          - suffix
          - present
          - regularExpression
        name:
          type: string
        value:
          type: string
    HTTPQueryMatch:
      type: object
      required:
      - matchOn
      - name
      - value
      properties:
        matchOn:
          type: string
          enum:
          - exact
          - present
          - regularExpression
        name:
          type: string
        value:
          type: string
    TCPRoutePage:
      type: object
      required:
      - routes
      properties:
        routes:
          type: array
          items:
            "$ref": "#/components/schemas/TCPRoute"
        meta:
          type: object
    TCPRoute:
      type: object
      required:
      - name
      - namespace
      - gateways
      properties:
        name:
          type: string
          minLength: 1
        namespace:
          type: string
          minLength: 1
        gateways:
          type: array
          items:
            "$ref": "#/components/schemas/GatewayReference"
          minItems: 1
        services:
          type: array
          items:
            "$ref": "#/components/schemas/TCPService"
          minItems: 1
          maxItems: 1 # this is a max for now until we support TCP load balancing
    TCPService:
      type: object
      required:
      - name
      - namespace
      properties:
        name:
          type: string
          minLength: 1
        namespace:
          type: string
          minLength: 1
        weight:
          type: number
    Error:
      type: object
      required:
      - message
      - code
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          minLength: 1