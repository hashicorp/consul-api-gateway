// Code generated by MockGen. DO NOT EDIT.
// Source: ./middleware.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core "github.com/hashicorp/consul-api-gateway/internal/core"
)

// MockGatewaySecretRegistry is a mock of GatewaySecretRegistry interface.
type MockGatewaySecretRegistry struct {
	ctrl     *gomock.Controller
	recorder *MockGatewaySecretRegistryMockRecorder
}

// MockGatewaySecretRegistryMockRecorder is the mock recorder for MockGatewaySecretRegistry.
type MockGatewaySecretRegistryMockRecorder struct {
	mock *MockGatewaySecretRegistry
}

// NewMockGatewaySecretRegistry creates a new mock instance.
func NewMockGatewaySecretRegistry(ctrl *gomock.Controller) *MockGatewaySecretRegistry {
	mock := &MockGatewaySecretRegistry{ctrl: ctrl}
	mock.recorder = &MockGatewaySecretRegistryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGatewaySecretRegistry) EXPECT() *MockGatewaySecretRegistryMockRecorder {
	return m.recorder
}

// CanFetchSecrets mocks base method.
func (m *MockGatewaySecretRegistry) CanFetchSecrets(ctx context.Context, info core.GatewayID, secrets []string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CanFetchSecrets", ctx, info, secrets)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CanFetchSecrets indicates an expected call of CanFetchSecrets.
func (mr *MockGatewaySecretRegistryMockRecorder) CanFetchSecrets(ctx, info, secrets interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CanFetchSecrets", reflect.TypeOf((*MockGatewaySecretRegistry)(nil).CanFetchSecrets), ctx, info, secrets)
}

// GatewayExists mocks base method.
func (m *MockGatewaySecretRegistry) GatewayExists(ctx context.Context, info core.GatewayID) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GatewayExists", ctx, info)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GatewayExists indicates an expected call of GatewayExists.
func (mr *MockGatewaySecretRegistryMockRecorder) GatewayExists(ctx, info interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GatewayExists", reflect.TypeOf((*MockGatewaySecretRegistry)(nil).GatewayExists), ctx, info)
}
