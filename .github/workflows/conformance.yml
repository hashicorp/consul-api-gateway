name: Conformance (Main)

on:
  schedule:
    - cron:  '0 0 * * *'

  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Start tmate session if any step fails'
        required: false
        type: boolean
        default: false  # GitHub parses this value to string, see https://github.com/actions/runner/issues/1483
      debug_timeout_minutes:
        description: 'How many minutes should the tmate session close itself after?'
        required: false
        type: string  # No support for numeric value
        default: '10'

env:
  GO_VERSION: "1.18"

jobs:
  run-on-environment:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cluster-type:
          - kind
          - eks
        config:
          - name: "consul@v1.11 + consul-k8s@v0.47.1"
            api-gateway-image: "hashicorppreview/consul-api-gateway:0.4-dev"
            consul-image: "hashicorp/consul:1.11"
            envoy-image: "envoyproxy/envoy:v1.20-latest"
            consul-k8s-version: "v0.47.1"
          - name: "consul@v1.12 + consul-k8s@v0.47.1"
            api-gateway-image: "hashicorppreview/consul-api-gateway:0.4-dev"
            consul-image: "hashicorp/consul:1.12"
            envoy-image: "envoyproxy/envoy:v1.22-latest"
            consul-k8s-version: "v0.47.1"
          - name: "consul@v1.13 + consul-k8s@v0.47.1"
            api-gateway-image: "hashicorppreview/consul-api-gateway:0.4-dev"
            consul-image: "hashicorp/consul:1.13"
            envoy-image: "envoyproxy/envoy:v1.22-latest"
            consul-k8s-version: "v0.47.1"
          - name: "consul@v1.14-dev + consul-k8s@v0.47.1"
            api-gateway-image: "hashicorppreview/consul-api-gateway:0.4-dev"
            consul-image: "hashicorppreview/consul:1.14-dev"
            envoy-image: "envoyproxy/envoy:v1.22-latest"
            consul-k8s-version: "v0.47.1"
      fail-fast: true
    name: "${{ matrix.cluster-type }} - ${{ matrix.config.name }}"
    concurrency:
      group: ${{ matrix.cluster-type }}
    steps:
      # Clone repos side-by-side:
      # GITHUB_WORKSPACE/
      #     consul-api-gateway/
      #     consul-k8s/
      #     gateway-api/
      - name: Checkout consul-api-gateway
        uses: actions/checkout@v2
        with:
          path: "consul-api-gateway"

      - name: Clone consul-k8s
        uses: actions/checkout@v2
        with:
          repository: "hashicorp/consul-k8s"
          ref: ${{ matrix.config.consul-k8s-version }}
          path: "consul-k8s"

      - name: Clone gateway-api
        uses: actions/checkout@v2
        with:
          repository: "hashicorp/gateway-api"
          ref: "conformance/v0.5.0-skipped-tests"
          path: "gateway-api"

      - name: Generate Unique Cluster Name
        id: unique
        run:
          echo "::set-output name=clustername::$( echo consul-api-gateway-test-${{ github.run_number }}-$RANDOM )"

      - name: Setup Kind cluster
        if: matrix.cluster-type == 'kind'
        uses: ./consul-api-gateway/.github/actions/setup-kind
        with:
          cluster-name: ${{ steps.unique.outputs.clustername }}
          metallb-config-path: "./consul-api-gateway/internal/testing/conformance/metallb-config.yaml"

      - name: Setup EKS cluster
        if: matrix.cluster-type == 'eks'
        uses: ./consul-api-gateway/.github/actions/setup-eks
        with:
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          cluster_name: ${{ steps.unique.outputs.clustername }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Install Consul API Gateway CRDs
        working-directory: "consul-api-gateway"
        run: kubectl apply --kustomize="./config/crd"

      - name: Install Consul
        working-directory: "consul-api-gateway/internal/testing/conformance"
        run: |
          helm install --values ./consul-config.yaml consul $GITHUB_WORKSPACE/consul-k8s/charts/consul --set global.image=${{ matrix.config.consul-image }} --set global.imageEnvoy=${{ matrix.config.envoy-image }} --set apiGateway.image=${{ matrix.config.api-gateway-image }} --create-namespace --namespace=consul
          kubectl wait --for=condition=Ready --timeout=120s --namespace=consul pods --all

      - name: Patch testing resources
        working-directory: "consul-api-gateway/internal/testing/conformance"
        run: |
          cp kustomization.yaml proxydefaults.yaml $GITHUB_WORKSPACE/gateway-api/conformance/
          cd $GITHUB_WORKSPACE/gateway-api/conformance/
          kubectl kustomize ./ --output ./base/manifests.yaml

      - name: Setup Goenv
        uses: ./consul-api-gateway/.github/actions/goenv
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run tests
        working-directory: "gateway-api/conformance"
        run: go test -v -timeout 10m ./ --gateway-class=consul-api-gateway

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: failure() && github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'true'
        timeout-minutes: ${{ fromJSON(github.event.inputs.debug_timeout_minutes) }}

      - name: Report Status
        if: always() && github.ref == 'refs/heads/main'
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          message_format: '{emoji} *{workflow}/${{ matrix.cluster-type }} - ${{ matrix.config.name }}* {status_message} in <{repo_url}|{repo}> on <{commit_url}|{commit_sha}>'
          mention_groups: '!here'
          mention_groups_when: 'failure,warnings'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

      - name: Tear down EKS cluster
        if: always() && matrix.cluster-type == 'eks'
        uses: ./consul-api-gateway/.github/actions/teardown-eks
        with:
          cluster_name: ${{ steps.unique.outputs.clustername }}
