name: conformance

on:
  pull_request:
    types: ["opened", "reopened", "synchronize", "labeled"]

  push:
     branches: ["conformance/*"]

  schedule:
    - cron:  '0 0 * * *'

  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Start tmate session if any step fails'
        required: false
        default: 'false'  # GitHub parses any value to string, no support for boolean

env:
  GO_VERSION: "1.17"

jobs:
  run-on-kind:
    # Run on PR only if there is a `pr/run-conformance` label
    if: "github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'pr/run-conformance')"
    runs-on: ubuntu-latest
    steps:
      # Clone repos side-by-side:
      # GITHUB_WORKSPACE/
      #     consul-api-gateway/
      #     consul-k8s/
      #     gateway-api/
      - name: Checkout consul-api-gateway
        uses: actions/checkout@v2
        with:
          path: "consul-api-gateway"

      - name: Clone consul-k8s
        uses: actions/checkout@v2
        with:
          repository: "hashicorp/consul-k8s"
          path: "consul-k8s"

      - name: Clone gateway-api
        uses: actions/checkout@v2
        with:
          repository: "hashicorp/gateway-api"
          ref: "60s-time-to-consistency"
          path: "gateway-api"

      - name: Setup Goenv
        uses: ./consul-api-gateway/.github/actions/goenv
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Create Kind cluster
        uses: helm/kind-action@2a525709fd0874b75d7ae842d257981b0e0f557d
        with:
          cluster_name: "consul-api-gateway-test"
          kubectl_version: "v1.21.0"

      - name: Install MetalLB
        run: |
          kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/namespace.yaml
          kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/metallb.yaml
          kubectl apply -f ./consul-api-gateway/internal/testing/conformance/metallb-config.yaml
          kubectl wait --for=condition=Ready --timeout=120s --namespace=metallb-system pods --all

      - name: Build binary
        env:
          CGO_ENABLED: "0"
          GOARCH: "amd64"
          GOOS: "linux"
        working-directory: "consul-api-gateway"
        run: go build -o ./consul-api-gateway

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # docker build -f Dockerfile.local -t consul-api-gateway:test --platform linux/amd64 .
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: "./consul-api-gateway"
          platforms: "linux/amd64"
          file: "./consul-api-gateway/Dockerfile.local"
          load: true
          push: false
          tags: "consul-api-gateway:test"

      - name: Load Docker image into Kind
        run: kind load docker-image consul-api-gateway:test --name consul-api-gateway-test

      - name: Install Consul API Gateway CRDs
        working-directory: "consul-api-gateway"
        run: kubectl apply --kustomize="./config/crd"

      - name: Install Consul
        working-directory: "consul-api-gateway/internal/testing/conformance"
        run: |
          helm install --values ./consul-config.yaml consul $GITHUB_WORKSPACE/consul-k8s/charts/consul --create-namespace --namespace=consul
          kubectl wait --for=condition=Ready --timeout=120s --namespace=consul pods --all

      - name: Patch testing resources
        working-directory: "consul-api-gateway/internal/testing/conformance"
        run: |
          cp kustomization.yaml proxydefaults.yaml $GITHUB_WORKSPACE/gateway-api/conformance/
          cd $GITHUB_WORKSPACE/gateway-api/conformance/
          kubectl kustomize ./ --output ./base/manifests.yaml

      - name: Run tests
        working-directory: "gateway-api/conformance"
        run: go test -v -timeout 10m ./ --gateway-class consul-api-gateway

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: failure() && github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'true'
        timeout-minutes: 10

      - name: Report Status
        if: always() && github.ref == 'refs/heads/main'
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          mention_groups: '!here'
          mention_groups_when: 'failure,warnings'

        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
